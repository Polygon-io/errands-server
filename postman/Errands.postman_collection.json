{
	"info": {
		"_postman_id": "8f651924-835c-43ec-bc36-f1293093a3da",
		"name": "Errands",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e1c8139-bc0c-4d7d-90c6-651d5fd0c035",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"errand_id\", jsonData.results.id);",
							"",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Errand status should be 'inactive'\", function (){ ",
							"    pm.expect(jsonData.results.status).to.eql( 'inactive' );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Process: Prior 100\",\n\t\"type\": \"extract\",\n\t\"options\": {\n\t\t\"ttl\": 60,\n\t\t\"priority\": 500\n\t},\n\t\"data\": {\n\t\t\"file\":\"http://s3.domain.com/some/dir/file.ext\",\n\t\t\"user\": \"351351345151\",\n\t\t\"dbid\": \"899687969\"\n\t}\n}"
				},
				"url": {
					"raw": "http://localhost:5555/v1/errands/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errands",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Errands",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c5b1ca0-0441-43c4-91c3-68f0e3fda5b8",
						"exec": [
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            type: \"array\",",
							"            items: {",
							"                $ref: \"errand\",",
							"            }",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5555/v1/errands",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errands"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Filtered Errands",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c5b1ca0-0441-43c4-91c3-68f0e3fda5b8",
						"exec": [
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            type: \"array\",",
							"            items: {",
							"                $ref: \"errand\",",
							"            }",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5555/v1/errands/list/status/inactive",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errands",
						"list",
						"status",
						"inactive"
					]
				}
			},
			"response": []
		},
		{
			"name": "Process Errand - Start",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e79ba1c7-4b3b-4942-87a6-ba16fbf61aac",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.globals.set(\"errand_id\", jsonData.results.id);",
							"",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Errand status should be 'active'\", function (){ ",
							"    pm.expect(jsonData.results.status).to.eql( \"active\" );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5555/v1/errands/process?type=extract",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errands",
						"process"
					],
					"query": [
						{
							"key": "type",
							"value": "extract"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Log to Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e898eaac-a354-4b4f-8acb-af6695cdfb3a",
						"exec": [
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"severity\": \"INFO\",\n\t\"message\": \"This is an update to the log of this errand..\"\n}"
				},
				"url": {
					"raw": "http://localhost:5555/v1/errand/{{errand_id}}/log",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errand",
						"{{errand_id}}",
						"log"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e243f842-ec20-43f2-a7a9-a568b8251109",
						"exec": [
							"var jsonData = pm.response.json();",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Errand progress should be 98.789\", function (){ ",
							"    pm.expect(jsonData.results.progress).to.eql( 98.789 );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"progress\": 98.789\n}"
				},
				"url": {
					"raw": "http://localhost:5555/v1/errand/{{errand_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errand",
						"{{errand_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f62e5f49-85b3-4e70-86ac-7569e949b5a3",
						"exec": [
							"var jsonData = pm.response.json();",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Errand Status should be 'failed'\", function (){ ",
							"    pm.expect(jsonData.results.status).to.eql(\"failed\");",
							"});",
							"pm.test(\"Errand progress should be 0\", function (){ ",
							"    pm.expect(jsonData.results.progress).to.eql( 0 );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"reason\": \"Error processing this errand. Processing failed at line 101:42\"\n}"
				},
				"url": {
					"raw": "http://localhost:5555/v1/errand/{{errand_id}}/failed",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errand",
						"{{errand_id}}",
						"failed"
					]
				}
			},
			"response": []
		},
		{
			"name": "Complete Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ad665b0f-0c50-4996-bb31-2178d9eeaeb0",
						"exec": [
							"var jsonData = pm.response.json();",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Errand Status should be 'completed'\", function (){ ",
							"    pm.expect(jsonData.results.status).to.eql(\"completed\");",
							"});",
							"pm.test(\"Errand progress should be 0\", function (){ ",
							"    pm.expect(jsonData.results.progress).to.eql( 100 );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5555/v1/errand/{{errand_id}}/completed",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errand",
						"{{errand_id}}",
						"completed"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retry Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb808d6e-06e8-4968-b9b2-e86c7915b299",
						"exec": [
							"var jsonData = pm.response.json();",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        results: {",
							"            $ref: \"errand\",",
							"        }",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"pm.test(\"Errand Status should be 'inactive'\", function (){ ",
							"    pm.expect(jsonData.results.status).to.eql(\"inactive\");",
							"});",
							"pm.test(\"Errand progress should be 0\", function (){ ",
							"    pm.expect(jsonData.results.progress).to.eql( 0 );",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5555/v1/errand/{{errand_id}}/retry",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errand",
						"{{errand_id}}",
						"retry"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Errand",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb78c88a-144b-47ef-a34e-11f1a52816ad",
						"exec": [
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5555/v1/errand/{{errand_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errand",
						"{{errand_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update All Errands ( filtered )",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e243f842-ec20-43f2-a7a9-a568b8251109",
						"exec": [
							"var jsonData = pm.response.json();",
							"var schema = {",
							"    type: \"object\",",
							"    properties: {",
							"        status: {",
							"            type: \"string\"",
							"        },",
							"        count: \"number\"",
							"    }",
							"};",
							"pm.test(\"Status code is 200\", function (){ ",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test('Schema is valid', function() {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"status\": \"inactive\"\n}"
				},
				"url": {
					"raw": "http://localhost:5555/v1/errands/update/status/active",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5555",
					"path": [
						"v1",
						"errands",
						"update",
						"status",
						"active"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f9876e9f-99ad-43cd-bc4b-32f20c813d34",
				"type": "text/javascript",
				"exec": [
					"tv4.addSchema('errand', {",
					"                type: \"object\",",
					"                properties: {",
					"                    id: \"string\",",
					"                    name: \"string\",",
					"                    type:  \"string\",",
					"                    options: {",
					"                        type: \"object\",",
					"                        properties: {",
					"                            ttl: \"number\",",
					"                            retries: \"number\",",
					"                            priority: \"number\",",
					"                            deleteOnCompleted: \"bool\"",
					"                        }",
					"                    },",
					"                    created: \"number\",",
					"                    status: { type: \"string\", enum:[\"inactive\", \"active\", \"failed\", \"completed\"] },",
					"                    progress: \"number\",",
					"                    attempts: \"number\",",
					"                    started: \"number\",",
					"                    failed: \"number\",",
					"                    logs: {",
					"                        type: \"array\",",
					"                        items: {",
					"                            type: \"object\",",
					"                            properties: {",
					"                                severity: {",
					"                                    type: \"string\",",
					"                                    enum: [\"INFO\", \"WARNING\", \"ERROR\"],",
					"                                },",
					"                                message: \"string\",",
					"                                timestamp: \"number\"",
					"                            }",
					"                        }",
					"                    }",
					"                }",
					"            });"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7e524ec1-0588-4bd0-bdd4-3a4bbd262595",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0d6d657d-4625-47e6-adcf-16aab5e3d107",
			"key": "errand",
			"value": "ERRAND_ID",
			"type": "string"
		}
	]
}